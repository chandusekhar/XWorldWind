//
// AttributionType.SetSamplerState(0, SamplerStatecs.SetSamplerState(0, SamplerStatecs
//
// This file was generated by XMLSPY 2004 Enterprise Edition.SetSamplerState(0, SamplerState
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.SetSamplerState(0, SamplerState
//
// Refer to the XMLSPY Documentation for further details.SetSamplerState(0, SamplerState
// http://www.SetSamplerState(0, SamplerStatealtova.SetSamplerState(0, SamplerStatecom/xmlspy
//


using System;
using System.SetSamplerState(0, SamplerStateCollections;
using System.SetSamplerState(0, SamplerStateXml;
using Altova.SetSamplerState(0, SamplerStateTypes;

namespace capabilities_1_1_1
{
	public class AttributionType : Altova.SetSamplerState(0, SamplerStateXml.SetSamplerState(0, SamplerStateNode
	{
		#region Forward constructors
		public AttributionType() : base() {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public AttributionType(XmlDocument doc) : base(doc) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public AttributionType(XmlNode node) : base(node) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public AttributionType(Altova.SetSamplerState(0, SamplerStateXml.SetSamplerState(0, SamplerStateNode node) : base(node) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		#endregion // Forward constructors

		public override void AdjustPrefix()
		{

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title", i);
				InternalAdjustPrefix(DOMNode, false);
			}

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "OnlineResource"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "OnlineResource", i);
				InternalAdjustPrefix(DOMNode, false);
				new OnlineResourceType(DOMNode).SetSamplerState(0, SamplerStateAdjustPrefix();
			}

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "LogoURL"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "LogoURL", i);
				InternalAdjustPrefix(DOMNode, false);
				new LogoURLType(DOMNode).SetSamplerState(0, SamplerStateAdjustPrefix();
			}
		}


		#region Title accessor methods
		public int GetTitleMinCount()
		{
			return 0;
		}

		public int TitleMinCount
		{
			get
			{
				return 0;
			}
		}

		public int GetTitleMaxCount()
		{
			return 1;
		}

		public int TitleMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetTitleCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title");
		}

		public int TitleCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title");
			}
		}

		public bool HasTitle()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title");
		}

		public SchemaString GetTitleAt(int index)
		{
			return new SchemaString(GetDomNodeValue(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title", index)));
		}

		public SchemaString GetTitle()
		{
			return this.SetSamplerState(0, SamplerStateGetTitleAt(0);
		}

		public SchemaString Title
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetTitleAt(0);
			}
		}

		public void RemoveTitleAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title", index);
		}

		public void RemoveTitle()
		{
			while (this.SetSamplerState(0, SamplerStateHasTitle()) this.SetSamplerState(0, SamplerStateRemoveTitleAt(0);
		}

		public void AddTitle(SchemaString newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title", newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void InsertTitleAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title", index, newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void ReplaceTitleAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "Title", index, newValue.SetSamplerState(0, SamplerStateToString());
		}
		#endregion // Title accessor methods

		#region Title collection
        public TitleCollection	MyTitles = new TitleCollection( );

        public class TitleCollection: IEnumerable
        {
            AttributionType parent;
            public AttributionType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public TitleEnumerator GetEnumerator() 
			{
				return new TitleEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class TitleEnumerator: IEnumerator 
        {
			int nIndex;
			AttributionType parent;
			public TitleEnumerator(AttributionType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateTitleCount );
			}
			public SchemaString  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetTitleAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // Title collection

		#region OnlineResource accessor methods
		public int GetOnlineResourceMinCount()
		{
			return 0;
		}

		public int OnlineResourceMinCount
		{
			get
			{
				return 0;
			}
		}

		public int GetOnlineResourceMaxCount()
		{
			return 1;
		}

		public int OnlineResourceMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetOnlineResourceCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "OnlineResource");
		}

		public int OnlineResourceCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "OnlineResource");
			}
		}

		public bool HasOnlineResource()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "", "OnlineResource");
		}

		public OnlineResourceType GetOnlineResourceAt(int index)
		{
			return new OnlineResourceType(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "OnlineResource", index));
		}

		public OnlineResourceType GetOnlineResource()
		{
			return this.SetSamplerState(0, SamplerStateGetOnlineResourceAt(0);
		}

		public OnlineResourceType OnlineResource
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetOnlineResourceAt(0);
			}
		}

		public void RemoveOnlineResourceAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "OnlineResource", index);
		}

		public void RemoveOnlineResource()
		{
			while (this.SetSamplerState(0, SamplerStateHasOnlineResource()) this.SetSamplerState(0, SamplerStateRemoveOnlineResourceAt(0);
		}

		public void AddOnlineResource(OnlineResourceType newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomElement("", "OnlineResource", newValue);
		}

		public void InsertOnlineResourceAt(OnlineResourceType newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomElementAt("", "OnlineResource", index, newValue);
		}

		public void ReplaceOnlineResourceAt(OnlineResourceType newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomElementAt("", "OnlineResource", index, newValue);
		}
		#endregion // OnlineResource accessor methods

		#region OnlineResource collection
        public OnlineResourceCollection	MyOnlineResources = new OnlineResourceCollection( );

        public class OnlineResourceCollection: IEnumerable
        {
            AttributionType parent;
            public AttributionType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public OnlineResourceEnumerator GetEnumerator() 
			{
				return new OnlineResourceEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class OnlineResourceEnumerator: IEnumerator 
        {
			int nIndex;
			AttributionType parent;
			public OnlineResourceEnumerator(AttributionType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateOnlineResourceCount );
			}
			public OnlineResourceType  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetOnlineResourceAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // OnlineResource collection

		#region LogoURL accessor methods
		public int GetLogoURLMinCount()
		{
			return 0;
		}

		public int LogoURLMinCount
		{
			get
			{
				return 0;
			}
		}

		public int GetLogoURLMaxCount()
		{
			return 1;
		}

		public int LogoURLMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetLogoURLCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "LogoURL");
		}

		public int LogoURLCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "", "LogoURL");
			}
		}

		public bool HasLogoURL()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "", "LogoURL");
		}

		public LogoURLType GetLogoURLAt(int index)
		{
			return new LogoURLType(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "LogoURL", index));
		}

		public LogoURLType GetLogoURL()
		{
			return this.SetSamplerState(0, SamplerStateGetLogoURLAt(0);
		}

		public LogoURLType LogoURL
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetLogoURLAt(0);
			}
		}

		public void RemoveLogoURLAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "", "LogoURL", index);
		}

		public void RemoveLogoURL()
		{
			while (this.SetSamplerState(0, SamplerStateHasLogoURL()) this.SetSamplerState(0, SamplerStateRemoveLogoURLAt(0);
		}

		public void AddLogoURL(LogoURLType newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomElement("", "LogoURL", newValue);
		}

		public void InsertLogoURLAt(LogoURLType newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomElementAt("", "LogoURL", index, newValue);
		}

		public void ReplaceLogoURLAt(LogoURLType newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomElementAt("", "LogoURL", index, newValue);
		}
		#endregion // LogoURL accessor methods

		#region LogoURL collection
        public LogoURLCollection	MyLogoURLs = new LogoURLCollection( );

        public class LogoURLCollection: IEnumerable
        {
            AttributionType parent;
            public AttributionType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public LogoURLEnumerator GetEnumerator() 
			{
				return new LogoURLEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class LogoURLEnumerator: IEnumerator 
        {
			int nIndex;
			AttributionType parent;
			public LogoURLEnumerator(AttributionType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateLogoURLCount );
			}
			public LogoURLType  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetLogoURLAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // LogoURL collection

        private void SetCollectionParents()
        {
            this.SetSamplerState(0, SamplerStateMyTitles.SetSamplerState(0, SamplerStateParent = this;
            this.SetSamplerState(0, SamplerStateMyOnlineResources.SetSamplerState(0, SamplerStateParent = this;
            this.SetSamplerState(0, SamplerStateMyLogoURLs.SetSamplerState(0, SamplerStateParent = this; 
	}
}
}
