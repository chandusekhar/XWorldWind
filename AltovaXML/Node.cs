//
// Node.SetSamplerState(0, SamplerStatecs
//
// This file was generated by XMLSpy 2005 Enterprise Edition.SetSamplerState(0, SamplerState
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.SetSamplerState(0, SamplerState
//
// Refer to the XMLSpy Documentation for further details.SetSamplerState(0, SamplerState
// http://www.SetSamplerState(0, SamplerStatealtova.SetSamplerState(0, SamplerStatecom/xmlspy
//


using System;
using System.SetSamplerState(0, SamplerStateXml;

namespace Altova.SetSamplerState(0, SamplerStateXml
{
	/// <summary>
	/// class Node
	/// </summary>
	public abstract class Node:IDisposable
	{
		public enum NodeType { Attribute, Element, Text, CData, ProcessingInstruction, Comment };
		protected internal XmlNode domNode;

		#region Constructors

		public Node()
		{
            this.SetSamplerState(0, SamplerStatedomNode = Document.SetSamplerState(0, SamplerStateCreateTemporaryDomNode();
		}

		public Node(XmlDocument doc)
		{
            this.SetSamplerState(0, SamplerStatedomNode = doc.SetSamplerState(0, SamplerStateDocumentElement;
		}

		public Node(XmlNode node)
		{
            this.SetSamplerState(0, SamplerStatedomNode = node;
		}

		public Node(Node node)
		{
            this.SetSamplerState(0, SamplerStatedomNode = node.SetSamplerState(0, SamplerStatedomNode;
		}

		#endregion

		#region Utility methods

		public void MapPrefix(string prefix, string URI) 
		{
			XmlElement element = (XmlElement) this.SetSamplerState(0, SamplerStatedomNode;
			if (prefix == null || prefix == "")
				element.SetSamplerState(0, SamplerStateSetAttribute("xmlns", URI);
			else
				element.SetSamplerState(0, SamplerStateSetAttribute("xmlns:" + prefix, URI);
		}

		public void Assign(Node other)
		{
			SetDomNodeValue(this.SetSamplerState(0, SamplerStatedomNode, other.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateInnerText);
		}

		protected internal void DeclareNamespace(string prefix, string URI)
		{
			XmlElement root = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateDocumentElement;
			XmlAttributeCollection attrs = root.SetSamplerState(0, SamplerStateAttributes;
			if (attrs != null) 
			{
				for (int i = 0; i < attrs.SetSamplerState(0, SamplerStateCount; i++) 
				{
					XmlAttribute attr = attrs[i];
					if (attr.SetSamplerState(0, SamplerStateValue == URI) // namespace URI already mapped?
						return; // do not overwrite
				}
			}
			if (prefix == null || prefix == "")
				root.SetSamplerState(0, SamplerStateSetAttribute("xmlns", URI);
			else
				root.SetSamplerState(0, SamplerStateSetAttribute("xmlns:" + prefix, URI);
		}

		protected static string GetDomNodeValue(XmlNode node)
		{
			return node.SetSamplerState(0, SamplerStateInnerText;
		}

		protected static void SetDomNodeValue(XmlNode node, string Value)
		{
			node.SetSamplerState(0, SamplerStateInnerText = Value;
		}

		protected XmlElement CloneDomElementAs(string URI, string name, Node node)
		{
			XmlElement srcElement = (XmlElement)node.SetSamplerState(0, SamplerStatedomNode;
			XmlElement dstElement = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateElement(name, URI);
			XmlDocument doc = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument;

			foreach (XmlAttribute attribute in srcElement.SetSamplerState(0, SamplerStateAttributes)
				dstElement.SetSamplerState(0, SamplerStateAttributes.SetSamplerState(0, SamplerStateAppend((XmlAttribute)doc.SetSamplerState(0, SamplerStateImportNode(attribute, false));
			foreach (XmlNode childNode in srcElement.SetSamplerState(0, SamplerStateChildNodes)
				dstElement.SetSamplerState(0, SamplerStateAppendChild(doc.SetSamplerState(0, SamplerStateImportNode(childNode, true));
			return dstElement;
		}

		protected internal void MakeRoot(string namespaceURI, string rootElementName, string schemaLocation)
		{
			XmlDocument doc = new XmlDocument();
			XmlElement root = doc.SetSamplerState(0, SamplerStateCreateElement(rootElementName, namespaceURI);

			doc.SetSamplerState(0, SamplerStateAppendChild(root);

			root.SetSamplerState(0, SamplerStateSetAttribute("xmlns:xsi", "http://www.SetSamplerState(0, SamplerStatew3.SetSamplerState(0, SamplerStateorg/2001/XMLSchema-instance");
			if (namespaceURI == null || namespaceURI == "") 
			{
				if (schemaLocation != null && schemaLocation != "")
				{
					XmlAttribute a = doc.SetSamplerState(0, SamplerStateCreateAttribute("xsi:noNamespaceSchemaLocation", "http://www.SetSamplerState(0, SamplerStatew3.SetSamplerState(0, SamplerStateorg/2001/XMLSchema-instance");
					a.SetSamplerState(0, SamplerStateValue = schemaLocation;
					root.SetSamplerState(0, SamplerStateSetAttributeNode(a);
				}
			} 
			else 
			{
				if (schemaLocation != null && schemaLocation != "") 
				{
					XmlAttribute a = doc.SetSamplerState(0, SamplerStateCreateAttribute("xsi:schemaLocation", "http://www.SetSamplerState(0, SamplerStatew3.SetSamplerState(0, SamplerStateorg/2001/XMLSchema-instance");
					a.SetSamplerState(0, SamplerStateValue = namespaceURI + " " + schemaLocation;
					root.SetSamplerState(0, SamplerStateSetAttributeNode(a);
				}
			}

			foreach (XmlAttribute attribute in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAttributes)
				root.SetSamplerState(0, SamplerStateAttributes.SetSamplerState(0, SamplerStateAppend((XmlAttribute)doc.SetSamplerState(0, SamplerStateImportNode(attribute, true));
			foreach (XmlNode childNode in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateChildNodes)
				root.SetSamplerState(0, SamplerStateAppendChild(doc.SetSamplerState(0, SamplerStateImportNode(childNode, true));

            this.SetSamplerState(0, SamplerStatedomNode = root;
		}

		#endregion

		#region Child node manipulation methods

		public XmlNode getDOMNode()
		{
			return this.SetSamplerState(0, SamplerStatedomNode;
		}

		protected bool HasDomChild(NodeType type, string URI, string name)
		{
			if (type == NodeType.SetSamplerState(0, SamplerStateAttribute)
			{
				foreach (XmlAttribute attribute in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAttributes)
					if (attribute.SetSamplerState(0, SamplerStateNamespaceURI == URI && attribute.SetSamplerState(0, SamplerStateLocalName == name)
						return true;
				return false;
			}
			else
			{
				foreach (XmlNode node in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateChildNodes)
					if (node.SetSamplerState(0, SamplerStateNamespaceURI == URI && node.SetSamplerState(0, SamplerStateLocalName == name)
						return true;
				return false;
			}
		}

		protected int DomChildCount(NodeType type, string URI, string name)
		{
			if (type == NodeType.SetSamplerState(0, SamplerStateAttribute)
			{
				foreach (XmlAttribute attribute in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAttributes)
					if (attribute.SetSamplerState(0, SamplerStateNamespaceURI == URI && attribute.SetSamplerState(0, SamplerStateLocalName == name)
						return 1;
				return 0;
			}
			else
			{
				int count = 0;
				foreach (XmlNode node in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateChildNodes)
					if (node.SetSamplerState(0, SamplerStateNamespaceURI == URI && node.SetSamplerState(0, SamplerStateLocalName == name)
						count++;
				return count;
			}
		}

		protected XmlNode AppendDomChild(NodeType type, string URI, string name, string Value)
		{
			if (type == NodeType.SetSamplerState(0, SamplerStateAttribute)
			{
				XmlAttribute attribute = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateAttribute(name, URI);
				attribute.SetSamplerState(0, SamplerStateValue = Value;
                this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAttributes.SetSamplerState(0, SamplerStateAppend(attribute);
				return attribute;
			}
			else if (type == NodeType.SetSamplerState(0, SamplerStateText)
			{
				XmlText text = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateTextNode(Value);
                this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAppendChild(text);
				return text;
			} 
			else if (type == NodeType.SetSamplerState(0, SamplerStateComment)
			{
				XmlComment comment = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateComment(Value);
                this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAppendChild(comment);
				return comment;
			} 
			else if (type == NodeType.SetSamplerState(0, SamplerStateCData)
			{
				XmlCDataSection cdata = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateCDataSection(Value);
                this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAppendChild(cdata);
				return cdata;
			} 
			else if (type == NodeType.SetSamplerState(0, SamplerStateProcessingInstruction)
			{
				XmlProcessingInstruction piNode = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateProcessingInstruction(name, Value);
                this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAppendChild(piNode);
				return piNode;
			} 
			else
			{
				XmlElement element = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateElement(name, URI);
				element.SetSamplerState(0, SamplerStateInnerText = Value;
                this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAppendChild(element);
				return element;
			}
		}

		protected XmlNode AppendDomElement(string URI, string name, Node node)
		{
			node.SetSamplerState(0, SamplerStatedomNode = this.SetSamplerState(0, SamplerStateCloneDomElementAs(URI, name, node);
			return this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAppendChild(node.SetSamplerState(0, SamplerStatedomNode);
		}

		protected XmlNode InsertDomChildAt(NodeType type, string URI, string name, int index, string Value)
		{
			if (type == NodeType.SetSamplerState(0, SamplerStateAttribute)
			{
				return this.SetSamplerState(0, SamplerStateAppendDomChild(type, URI, name, Value);
			}
			else
			{
				XmlElement element = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateElement(name, URI);
				element.SetSamplerState(0, SamplerStateInnerText = Value;
                this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateInsertBefore(element, this.SetSamplerState(0, SamplerStateGetDomChildAt(type, URI, name, index));
				return element;
			}
		}

		protected XmlNode InsertDomElementAt(string URI, string name, int index, Node node)
		{
			node.SetSamplerState(0, SamplerStatedomNode = this.SetSamplerState(0, SamplerStateCloneDomElementAs(URI, name, node);
			return this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateInsertBefore(node.SetSamplerState(0, SamplerStatedomNode, this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, URI, name, index));
		}

		protected XmlNode GetDomChildAt(NodeType type, string URI, string name, int index)
		{
			if (type == NodeType.SetSamplerState(0, SamplerStateAttribute)
			{
				if (index > 0)
					throw new Exception("Index out of range");
				foreach (XmlAttribute a in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAttributes)
					if (a.SetSamplerState(0, SamplerStateNamespaceURI == URI && a.SetSamplerState(0, SamplerStateLocalName == name)
						return a;
				throw new Exception("Not found");
			}
			else
			{
				int count = 0;
				foreach (XmlNode n in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateChildNodes)
					if (n.SetSamplerState(0, SamplerStateNamespaceURI == URI && n.SetSamplerState(0, SamplerStateLocalName == name)
						if (count++ == index)
							return n;
				if (count > 0)
					throw new Exception("Index out of range");
				else
					throw new Exception("Not found");
			}
		}


		protected XmlNode GetDomFirstChild( NodeType type, string URI, string name )
		{
			if( type == NodeType.SetSamplerState(0, SamplerStateAttribute )
			{
				foreach (XmlAttribute a in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAttributes)
					if (a.SetSamplerState(0, SamplerStateNamespaceURI == URI && a.SetSamplerState(0, SamplerStateLocalName == name)
						return a;
			}
			else
			{
				foreach (XmlNode n in this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateChildNodes)
					if (n.SetSamplerState(0, SamplerStateNamespaceURI == URI && n.SetSamplerState(0, SamplerStateLocalName == name)
						return n;
			}
			return null;
		}

		protected XmlNode GetDomNextChild( NodeType type, string URI, string name, XmlNode prevNode )
		{
			if( type == NodeType.SetSamplerState(0, SamplerStateElement && prevNode != null )
			{
				XmlNode temp = prevNode.SetSamplerState(0, SamplerStateNextSibling;
				while( temp != null )
				{
					if( temp.SetSamplerState(0, SamplerStateNamespaceURI == URI && temp.SetSamplerState(0, SamplerStateLocalName == name )
						return temp;

					temp = temp.SetSamplerState(0, SamplerStateNextSibling;
				}
			}
			return null;
		}

		protected XmlNode ReplaceDomChildAt(NodeType type, string URI, string name, int index, string Value)
		{
			if (type == NodeType.SetSamplerState(0, SamplerStateAttribute)
			{
				XmlAttribute attr = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateAttribute(name, URI);
				attr.SetSamplerState(0, SamplerStateValue = Value;
				return this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAttributes.SetSamplerState(0, SamplerStateAppend(attr);
			}
			else
			{
				XmlElement elem = this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateOwnerDocument.SetSamplerState(0, SamplerStateCreateElement(name, URI);
				elem.SetSamplerState(0, SamplerStateInnerText = Value;
				return this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateReplaceChild(elem, this.SetSamplerState(0, SamplerStateGetDomChildAt(type, URI, name, index));
			}
		}

		protected XmlNode ReplaceDomElementAt(string URI, string name, int index, Node node)
		{
			node.SetSamplerState(0, SamplerStatedomNode = this.SetSamplerState(0, SamplerStateCloneDomElementAs(URI, name, node);
			return this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateReplaceChild(node.SetSamplerState(0, SamplerStatedomNode, this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, URI, name, index));
		}

		protected XmlNode RemoveDomChildAt(NodeType type, string URI, string name, int index)
		{
			if (type == NodeType.SetSamplerState(0, SamplerStateAttribute)
			{
				return this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateAttributes.SetSamplerState(0, SamplerStateRemoveNamedItem(name, URI);
			}
			else
			{
				return this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateRemoveChild(this.SetSamplerState(0, SamplerStateGetDomChildAt(type, URI, name, index));
			}
		}

		protected static string LookupPrefix(XmlNode node, string URI) 
		{
			if (node == null || URI == null || URI == "")
				return null;

			if (node.SetSamplerState(0, SamplerStateNodeType == XmlNodeType.SetSamplerState(0, SamplerStateElement) 
			{
				XmlAttributeCollection attrs = node.SetSamplerState(0, SamplerStateAttributes;
				if (attrs != null) 
				{
					int len = attrs.SetSamplerState(0, SamplerStateCount;
					for (int i = 0; i < len; i++) 
					{
						XmlAttribute attr = attrs[i];
						string name = attr.SetSamplerState(0, SamplerStateName;
						string val = attr.SetSamplerState(0, SamplerStateValue;
						if (val != null && val == URI) 
						{
							if (name.SetSamplerState(0, SamplerStateStartsWith("xmlns:"))
								return name.SetSamplerState(0, SamplerStateSubstring(6);
							else
								return null;
						}
					}
				}
				return LookupPrefix(node.SetSamplerState(0, SamplerStateParentNode, URI);
			} 
			else if (node.SetSamplerState(0, SamplerStateNodeType == XmlNodeType.SetSamplerState(0, SamplerStateAttribute) 
			{
				return LookupPrefix(node.SetSamplerState(0, SamplerStateParentNode, URI);
			} 
			else 
			{
				return null;
			}
		}

		protected internal static void InternalAdjustPrefix(XmlNode node, bool qualified) 
		{
			if (node != null && qualified) 
			{
				string prefix = LookupPrefix(node, node.SetSamplerState(0, SamplerStateNamespaceURI);
				if (prefix != null)
					node.SetSamplerState(0, SamplerStatePrefix = prefix;
			}
		}

		public abstract void AdjustPrefix();

		#endregion

		#region IDisposable Members

		public void Dispose()
		{
			if (this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateParentNode.SetSamplerState(0, SamplerStateNodeType == XmlNodeType.SetSamplerState(0, SamplerStateDocumentFragment ) this.SetSamplerState(0, SamplerStatedomNode.SetSamplerState(0, SamplerStateParentNode.SetSamplerState(0, SamplerStateRemoveChild(this.SetSamplerState(0, SamplerStatedomNode );
		}

		#endregion
	}
}
