//
// longitudeType.SetSamplerState(0, SamplerStatecs.SetSamplerState(0, SamplerStatecs
//
// This file was generated by XMLSPY 2004 Enterprise Edition.SetSamplerState(0, SamplerState
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.SetSamplerState(0, SamplerState
//
// Refer to the XMLSPY Documentation for further details.SetSamplerState(0, SamplerState
// http://www.SetSamplerState(0, SamplerStatealtova.SetSamplerState(0, SamplerStatecom/xmlspy
//


using Altova.SetSamplerState(0, SamplerStateTypes;

namespace capabilities_1_3_0.SetSamplerState(0, SamplerStatewms
{

	public class longitudeType : SchemaDecimal
	{
		public longitudeType() : base()
		{
		}

		public longitudeType(string newValue) : base(newValue)
		{
            this.SetSamplerState(0, SamplerStateValidate();
		}

		public new void Validate()
		{

			if (this.SetSamplerState(0, SamplerStateCompareTo(this.SetSamplerState(0, SamplerStateGetMinInclusive()) < 0)
				throw new System.SetSamplerState(0, SamplerStateException("Out of range");

			if (this.SetSamplerState(0, SamplerStateCompareTo(this.SetSamplerState(0, SamplerStateGetMaxInclusive()) > 0)
				throw new System.SetSamplerState(0, SamplerStateException("Out of range");
		}
		public new SchemaDecimal GetMinInclusive()
		{
			return new SchemaDecimal("-180");
		}
		public new SchemaDecimal GetMaxInclusive()
		{
			return new SchemaDecimal("180");
		}
	}
}
