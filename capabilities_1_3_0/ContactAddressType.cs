//
// ContactAddressType.SetSamplerState(0, SamplerStatecs.SetSamplerState(0, SamplerStatecs
//
// This file was generated by XMLSPY 2004 Enterprise Edition.SetSamplerState(0, SamplerState
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.SetSamplerState(0, SamplerState
//
// Refer to the XMLSPY Documentation for further details.SetSamplerState(0, SamplerState
// http://www.SetSamplerState(0, SamplerStatealtova.SetSamplerState(0, SamplerStatecom/xmlspy
//


using System;
using System.SetSamplerState(0, SamplerStateCollections;
using System.SetSamplerState(0, SamplerStateXml;
using Altova.SetSamplerState(0, SamplerStateTypes;

namespace capabilities_1_3_0.SetSamplerState(0, SamplerStatewms
{
	public class ContactAddressType : Altova.SetSamplerState(0, SamplerStateXml.SetSamplerState(0, SamplerStateNode
	{
		#region Forward constructors
		public ContactAddressType() : base() {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public ContactAddressType(XmlDocument doc) : base(doc) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public ContactAddressType(XmlNode node) : base(node) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public ContactAddressType(Altova.SetSamplerState(0, SamplerStateXml.SetSamplerState(0, SamplerStateNode node) : base(node) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		#endregion // Forward constructors

		public override void AdjustPrefix()
		{

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType", i);
				InternalAdjustPrefix(DOMNode, true);
			}

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address", i);
				InternalAdjustPrefix(DOMNode, true);
			}

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City", i);
				InternalAdjustPrefix(DOMNode, true);
			}

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince", i);
				InternalAdjustPrefix(DOMNode, true);
			}

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode", i);
				InternalAdjustPrefix(DOMNode, true);
			}

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country", i);
				InternalAdjustPrefix(DOMNode, true);
			}
		}


		#region AddressType accessor methods
		public int GetAddressTypeMinCount()
		{
			return 1;
		}

		public int AddressTypeMinCount
		{
			get
			{
				return 1;
			}
		}

		public int GetAddressTypeMaxCount()
		{
			return 1;
		}

		public int AddressTypeMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetAddressTypeCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType");
		}

		public int AddressTypeCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType");
			}
		}

		public bool HasAddressType()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType");
		}

		public SchemaString GetAddressTypeAt(int index)
		{
			return new SchemaString(GetDomNodeValue(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType", index)));
		}

		public SchemaString GetAddressType()
		{
			return this.SetSamplerState(0, SamplerStateGetAddressTypeAt(0);
		}

		public SchemaString AddressType
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetAddressTypeAt(0);
			}
		}

		public void RemoveAddressTypeAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType", index);
		}

		public void RemoveAddressType()
		{
			while (this.SetSamplerState(0, SamplerStateHasAddressType()) this.SetSamplerState(0, SamplerStateRemoveAddressTypeAt(0);
		}

		public void AddAddressType(SchemaString newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType", newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void InsertAddressTypeAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType", index, newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void ReplaceAddressTypeAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "AddressType", index, newValue.SetSamplerState(0, SamplerStateToString());
		}
		#endregion // AddressType accessor methods

		#region AddressType collection
        public AddressTypeCollection	MyAddressTypes = new AddressTypeCollection( );

        public class AddressTypeCollection: IEnumerable
        {
            ContactAddressType parent;
            public ContactAddressType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public AddressTypeEnumerator GetEnumerator() 
			{
				return new AddressTypeEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class AddressTypeEnumerator: IEnumerator 
        {
			int nIndex;
			ContactAddressType parent;
			public AddressTypeEnumerator(ContactAddressType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateAddressTypeCount );
			}
			public SchemaString  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetAddressTypeAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // AddressType collection

		#region Address accessor methods
		public int GetAddressMinCount()
		{
			return 1;
		}

		public int AddressMinCount
		{
			get
			{
				return 1;
			}
		}

		public int GetAddressMaxCount()
		{
			return 1;
		}

		public int AddressMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetAddressCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address");
		}

		public int AddressCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address");
			}
		}

		public bool HasAddress()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address");
		}

		public SchemaString GetAddressAt(int index)
		{
			return new SchemaString(GetDomNodeValue(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address", index)));
		}

		public SchemaString GetAddress()
		{
			return this.SetSamplerState(0, SamplerStateGetAddressAt(0);
		}

		public SchemaString Address
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetAddressAt(0);
			}
		}

		public void RemoveAddressAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address", index);
		}

		public void RemoveAddress()
		{
			while (this.SetSamplerState(0, SamplerStateHasAddress()) this.SetSamplerState(0, SamplerStateRemoveAddressAt(0);
		}

		public void AddAddress(SchemaString newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address", newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void InsertAddressAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address", index, newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void ReplaceAddressAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Address", index, newValue.SetSamplerState(0, SamplerStateToString());
		}
		#endregion // Address accessor methods

		#region Address collection
        public AddressCollection	MyAddresss = new AddressCollection( );

        public class AddressCollection: IEnumerable
        {
            ContactAddressType parent;
            public ContactAddressType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public AddressEnumerator GetEnumerator() 
			{
				return new AddressEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class AddressEnumerator: IEnumerator 
        {
			int nIndex;
			ContactAddressType parent;
			public AddressEnumerator(ContactAddressType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateAddressCount );
			}
			public SchemaString  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetAddressAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // Address collection

		#region City accessor methods
		public int GetCityMinCount()
		{
			return 1;
		}

		public int CityMinCount
		{
			get
			{
				return 1;
			}
		}

		public int GetCityMaxCount()
		{
			return 1;
		}

		public int CityMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetCityCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City");
		}

		public int CityCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City");
			}
		}

		public bool HasCity()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City");
		}

		public SchemaString GetCityAt(int index)
		{
			return new SchemaString(GetDomNodeValue(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City", index)));
		}

		public SchemaString GetCity()
		{
			return this.SetSamplerState(0, SamplerStateGetCityAt(0);
		}

		public SchemaString City
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetCityAt(0);
			}
		}

		public void RemoveCityAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City", index);
		}

		public void RemoveCity()
		{
			while (this.SetSamplerState(0, SamplerStateHasCity()) this.SetSamplerState(0, SamplerStateRemoveCityAt(0);
		}

		public void AddCity(SchemaString newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City", newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void InsertCityAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City", index, newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void ReplaceCityAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "City", index, newValue.SetSamplerState(0, SamplerStateToString());
		}
		#endregion // City accessor methods

		#region City collection
        public CityCollection	MyCitys = new CityCollection( );

        public class CityCollection: IEnumerable
        {
            ContactAddressType parent;
            public ContactAddressType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public CityEnumerator GetEnumerator() 
			{
				return new CityEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class CityEnumerator: IEnumerator 
        {
			int nIndex;
			ContactAddressType parent;
			public CityEnumerator(ContactAddressType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateCityCount );
			}
			public SchemaString  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetCityAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // City collection

		#region StateOrProvince accessor methods
		public int GetStateOrProvinceMinCount()
		{
			return 1;
		}

		public int StateOrProvinceMinCount
		{
			get
			{
				return 1;
			}
		}

		public int GetStateOrProvinceMaxCount()
		{
			return 1;
		}

		public int StateOrProvinceMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetStateOrProvinceCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince");
		}

		public int StateOrProvinceCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince");
			}
		}

		public bool HasStateOrProvince()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince");
		}

		public SchemaString GetStateOrProvinceAt(int index)
		{
			return new SchemaString(GetDomNodeValue(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince", index)));
		}

		public SchemaString GetStateOrProvince()
		{
			return this.SetSamplerState(0, SamplerStateGetStateOrProvinceAt(0);
		}

		public SchemaString StateOrProvince
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetStateOrProvinceAt(0);
			}
		}

		public void RemoveStateOrProvinceAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince", index);
		}

		public void RemoveStateOrProvince()
		{
			while (this.SetSamplerState(0, SamplerStateHasStateOrProvince()) this.SetSamplerState(0, SamplerStateRemoveStateOrProvinceAt(0);
		}

		public void AddStateOrProvince(SchemaString newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince", newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void InsertStateOrProvinceAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince", index, newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void ReplaceStateOrProvinceAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "StateOrProvince", index, newValue.SetSamplerState(0, SamplerStateToString());
		}
		#endregion // StateOrProvince accessor methods

		#region StateOrProvince collection
        public StateOrProvinceCollection	MyStateOrProvinces = new StateOrProvinceCollection( );

        public class StateOrProvinceCollection: IEnumerable
        {
            ContactAddressType parent;
            public ContactAddressType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public StateOrProvinceEnumerator GetEnumerator() 
			{
				return new StateOrProvinceEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class StateOrProvinceEnumerator: IEnumerator 
        {
			int nIndex;
			ContactAddressType parent;
			public StateOrProvinceEnumerator(ContactAddressType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateStateOrProvinceCount );
			}
			public SchemaString  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetStateOrProvinceAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // StateOrProvince collection

		#region PostCode accessor methods
		public int GetPostCodeMinCount()
		{
			return 1;
		}

		public int PostCodeMinCount
		{
			get
			{
				return 1;
			}
		}

		public int GetPostCodeMaxCount()
		{
			return 1;
		}

		public int PostCodeMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetPostCodeCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode");
		}

		public int PostCodeCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode");
			}
		}

		public bool HasPostCode()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode");
		}

		public SchemaString GetPostCodeAt(int index)
		{
			return new SchemaString(GetDomNodeValue(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode", index)));
		}

		public SchemaString GetPostCode()
		{
			return this.SetSamplerState(0, SamplerStateGetPostCodeAt(0);
		}

		public SchemaString PostCode
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetPostCodeAt(0);
			}
		}

		public void RemovePostCodeAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode", index);
		}

		public void RemovePostCode()
		{
			while (this.SetSamplerState(0, SamplerStateHasPostCode()) this.SetSamplerState(0, SamplerStateRemovePostCodeAt(0);
		}

		public void AddPostCode(SchemaString newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode", newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void InsertPostCodeAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode", index, newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void ReplacePostCodeAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "PostCode", index, newValue.SetSamplerState(0, SamplerStateToString());
		}
		#endregion // PostCode accessor methods

		#region PostCode collection
        public PostCodeCollection	MyPostCodes = new PostCodeCollection( );

        public class PostCodeCollection: IEnumerable
        {
            ContactAddressType parent;
            public ContactAddressType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public PostCodeEnumerator GetEnumerator() 
			{
				return new PostCodeEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class PostCodeEnumerator: IEnumerator 
        {
			int nIndex;
			ContactAddressType parent;
			public PostCodeEnumerator(ContactAddressType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStatePostCodeCount );
			}
			public SchemaString  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetPostCodeAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // PostCode collection

		#region Country accessor methods
		public int GetCountryMinCount()
		{
			return 1;
		}

		public int CountryMinCount
		{
			get
			{
				return 1;
			}
		}

		public int GetCountryMaxCount()
		{
			return 1;
		}

		public int CountryMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetCountryCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country");
		}

		public int CountryCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country");
			}
		}

		public bool HasCountry()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country");
		}

		public SchemaString GetCountryAt(int index)
		{
			return new SchemaString(GetDomNodeValue(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country", index)));
		}

		public SchemaString GetCountry()
		{
			return this.SetSamplerState(0, SamplerStateGetCountryAt(0);
		}

		public SchemaString Country
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetCountryAt(0);
			}
		}

		public void RemoveCountryAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country", index);
		}

		public void RemoveCountry()
		{
			while (this.SetSamplerState(0, SamplerStateHasCountry()) this.SetSamplerState(0, SamplerStateRemoveCountryAt(0);
		}

		public void AddCountry(SchemaString newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country", newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void InsertCountryAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country", index, newValue.SetSamplerState(0, SamplerStateToString());
		}

		public void ReplaceCountryAt(SchemaString newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Country", index, newValue.SetSamplerState(0, SamplerStateToString());
		}
		#endregion // Country accessor methods

		#region Country collection
        public CountryCollection	MyCountrys = new CountryCollection( );

        public class CountryCollection: IEnumerable
        {
            ContactAddressType parent;
            public ContactAddressType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public CountryEnumerator GetEnumerator() 
			{
				return new CountryEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class CountryEnumerator: IEnumerator 
        {
			int nIndex;
			ContactAddressType parent;
			public CountryEnumerator(ContactAddressType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateCountryCount );
			}
			public SchemaString  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetCountryAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // Country collection

        private void SetCollectionParents()
        {
            this.SetSamplerState(0, SamplerStateMyAddressTypes.SetSamplerState(0, SamplerStateParent = this;
            this.SetSamplerState(0, SamplerStateMyAddresss.SetSamplerState(0, SamplerStateParent = this;
            this.SetSamplerState(0, SamplerStateMyCitys.SetSamplerState(0, SamplerStateParent = this;
            this.SetSamplerState(0, SamplerStateMyStateOrProvinces.SetSamplerState(0, SamplerStateParent = this;
            this.SetSamplerState(0, SamplerStateMyPostCodes.SetSamplerState(0, SamplerStateParent = this;
            this.SetSamplerState(0, SamplerStateMyCountrys.SetSamplerState(0, SamplerStateParent = this; 
	}
}
}
