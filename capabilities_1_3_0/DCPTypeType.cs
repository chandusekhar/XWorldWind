//
// DCPTypeType.SetSamplerState(0, SamplerStatecs.SetSamplerState(0, SamplerStatecs
//
// This file was generated by XMLSPY 2004 Enterprise Edition.SetSamplerState(0, SamplerState
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.SetSamplerState(0, SamplerState
//
// Refer to the XMLSPY Documentation for further details.SetSamplerState(0, SamplerState
// http://www.SetSamplerState(0, SamplerStatealtova.SetSamplerState(0, SamplerStatecom/xmlspy
//


using System;
using System.SetSamplerState(0, SamplerStateCollections;
using System.SetSamplerState(0, SamplerStateXml;
using Altova.SetSamplerState(0, SamplerStateTypes;

namespace capabilities_1_3_0.SetSamplerState(0, SamplerStatewms
{
	public class DCPTypeType : Altova.SetSamplerState(0, SamplerStateXml.SetSamplerState(0, SamplerStateNode
	{
		#region Forward constructors
		public DCPTypeType() : base() {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public DCPTypeType(XmlDocument doc) : base(doc) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public DCPTypeType(XmlNode node) : base(node) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public DCPTypeType(Altova.SetSamplerState(0, SamplerStateXml.SetSamplerState(0, SamplerStateNode node) : base(node) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		#endregion // Forward constructors

		public override void AdjustPrefix()
		{

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP", i);
				InternalAdjustPrefix(DOMNode, true);
				new HTTPType(DOMNode).SetSamplerState(0, SamplerStateAdjustPrefix();
			}
		}


		#region HTTP accessor methods
		public int GetHTTPMinCount()
		{
			return 1;
		}

		public int HTTPMinCount
		{
			get
			{
				return 1;
			}
		}

		public int GetHTTPMaxCount()
		{
			return 1;
		}

		public int HTTPMaxCount
		{
			get
			{
				return 1;
			}
		}

		public int GetHTTPCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP");
		}

		public int HTTPCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP");
			}
		}

		public bool HasHTTP()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP");
		}

		public HTTPType GetHTTPAt(int index)
		{
			return new HTTPType(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP", index));
		}

		public HTTPType GetHTTP()
		{
			return this.SetSamplerState(0, SamplerStateGetHTTPAt(0);
		}

		public HTTPType HTTP
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetHTTPAt(0);
			}
		}

		public void RemoveHTTPAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP", index);
		}

		public void RemoveHTTP()
		{
			while (this.SetSamplerState(0, SamplerStateHasHTTP()) this.SetSamplerState(0, SamplerStateRemoveHTTPAt(0);
		}

		public void AddHTTP(HTTPType newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomElement("http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP", newValue);
		}

		public void InsertHTTPAt(HTTPType newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomElementAt("http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP", index, newValue);
		}

		public void ReplaceHTTPAt(HTTPType newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomElementAt("http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "HTTP", index, newValue);
		}
		#endregion // HTTP accessor methods

		#region HTTP collection
        public HTTPCollection	MyHTTPs = new HTTPCollection( );

        public class HTTPCollection: IEnumerable
        {
            DCPTypeType parent;
            public DCPTypeType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public HTTPEnumerator GetEnumerator() 
			{
				return new HTTPEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class HTTPEnumerator: IEnumerator 
        {
			int nIndex;
			DCPTypeType parent;
			public HTTPEnumerator(DCPTypeType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateHTTPCount );
			}
			public HTTPType  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetHTTPAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // HTTP collection

        private void SetCollectionParents()
        {
            this.SetSamplerState(0, SamplerStateMyHTTPs.SetSamplerState(0, SamplerStateParent = this; 
	}
}
}
