//
// KeywordListType.SetSamplerState(0, SamplerStatecs.SetSamplerState(0, SamplerStatecs
//
// This file was generated by XMLSPY 2004 Enterprise Edition.SetSamplerState(0, SamplerState
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.SetSamplerState(0, SamplerState
//
// Refer to the XMLSPY Documentation for further details.SetSamplerState(0, SamplerState
// http://www.SetSamplerState(0, SamplerStatealtova.SetSamplerState(0, SamplerStatecom/xmlspy
//


using System;
using System.SetSamplerState(0, SamplerStateCollections;
using System.SetSamplerState(0, SamplerStateXml;
using Altova.SetSamplerState(0, SamplerStateTypes;

namespace capabilities_1_3_0.SetSamplerState(0, SamplerStatewms
{
	public class KeywordListType : Altova.SetSamplerState(0, SamplerStateXml.SetSamplerState(0, SamplerStateNode
	{
		#region Forward constructors
		public KeywordListType() : base() {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public KeywordListType(XmlDocument doc) : base(doc) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public KeywordListType(XmlNode node) : base(node) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		public KeywordListType(Altova.SetSamplerState(0, SamplerStateXml.SetSamplerState(0, SamplerStateNode node) : base(node) {
            this.SetSamplerState(0, SamplerStateSetCollectionParents(); }
		#endregion // Forward constructors

		public override void AdjustPrefix()
		{

			for (int i = 0; i < this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword"); i++)
			{
				XmlNode DOMNode = this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword", i);
				InternalAdjustPrefix(DOMNode, true);
				new KeywordType(DOMNode).SetSamplerState(0, SamplerStateAdjustPrefix();
			}
		}


		#region Keyword accessor methods
		public int GetKeywordMinCount()
		{
			return 0;
		}

		public int KeywordMinCount
		{
			get
			{
				return 0;
			}
		}

		public int GetKeywordMaxCount()
		{
			return Int32.SetSamplerState(0, SamplerStateMaxValue;
		}

		public int KeywordMaxCount
		{
			get
			{
				return Int32.SetSamplerState(0, SamplerStateMaxValue;
			}
		}

		public int GetKeywordCount()
		{
			return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword");
		}

		public int KeywordCount
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateDomChildCount(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword");
			}
		}

		public bool HasKeyword()
		{
			return this.SetSamplerState(0, SamplerStateHasDomChild(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword");
		}

		public KeywordType GetKeywordAt(int index)
		{
			return new KeywordType(this.SetSamplerState(0, SamplerStateGetDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword", index));
		}

		public KeywordType GetKeyword()
		{
			return this.SetSamplerState(0, SamplerStateGetKeywordAt(0);
		}

		public KeywordType Keyword
		{
			get
			{
				return this.SetSamplerState(0, SamplerStateGetKeywordAt(0);
			}
		}

		public void RemoveKeywordAt(int index)
		{
            this.SetSamplerState(0, SamplerStateRemoveDomChildAt(NodeType.SetSamplerState(0, SamplerStateElement, "http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword", index);
		}

		public void RemoveKeyword()
		{
			while (this.SetSamplerState(0, SamplerStateHasKeyword()) this.SetSamplerState(0, SamplerStateRemoveKeywordAt(0);
		}

		public void AddKeyword(KeywordType newValue)
		{
            this.SetSamplerState(0, SamplerStateAppendDomElement("http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword", newValue);
		}

		public void InsertKeywordAt(KeywordType newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateInsertDomElementAt("http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword", index, newValue);
		}

		public void ReplaceKeywordAt(KeywordType newValue, int index)
		{
            this.SetSamplerState(0, SamplerStateReplaceDomElementAt("http://www.SetSamplerState(0, SamplerStateopengis.SetSamplerState(0, SamplerStatenet/wms", "Keyword", index, newValue);
		}
		#endregion // Keyword accessor methods

		#region Keyword collection
        public KeywordCollection	MyKeywords = new KeywordCollection( );

        public class KeywordCollection: IEnumerable
        {
            KeywordListType parent;
            public KeywordListType Parent
			{
				set
				{
                    this.SetSamplerState(0, SamplerStateparent = value;
				}
			}
			public KeywordEnumerator GetEnumerator() 
			{
				return new KeywordEnumerator(this.SetSamplerState(0, SamplerStateparent);
			}
		
			IEnumerator IEnumerable.SetSamplerState(0, SamplerStateGetEnumerator() 
			{
				return this.SetSamplerState(0, SamplerStateGetEnumerator();
			}
        }

        public class KeywordEnumerator: IEnumerator 
        {
			int nIndex;
			KeywordListType parent;
			public KeywordEnumerator(KeywordListType par) 
			{
                this.SetSamplerState(0, SamplerStateparent = par;
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public void Reset() 
			{
                this.SetSamplerState(0, SamplerStatenIndex = -1;
			}
			public bool MoveNext() 
			{
                this.SetSamplerState(0, SamplerStatenIndex++;
				return(this.SetSamplerState(0, SamplerStatenIndex < this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateKeywordCount );
			}
			public KeywordType  Current 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateparent.SetSamplerState(0, SamplerStateGetKeywordAt(this.SetSamplerState(0, SamplerStatenIndex));
				}
			}
			object IEnumerator.SetSamplerState(0, SamplerStateCurrent 
			{
				get 
				{
					return(this.SetSamplerState(0, SamplerStateCurrent);
				}
			}
    	}

        #endregion // Keyword collection

        private void SetCollectionParents()
        {
            this.SetSamplerState(0, SamplerStateMyKeywords.SetSamplerState(0, SamplerStateParent = this; 
	}
}
}
